// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.5.14
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_codegen.cpp:149

#ifndef _TAO_IDL_MSGC_GRQ6OD_H_
#define _TAO_IDL_MSGC_GRQ6OD_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include "tao/ORB.h"
#include "tao/Basic_Types_IDLv4.h"
TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  using namespace IDLv4;
}

TAO_END_VERSIONED_NAMESPACE_DECL

#include "tao/String_Manager_T.h"
#include "tao/VarOut_T.h"
#include "tao/Array_VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/UB_String_Arguments.h"
#include "tao/Fixed_Array_Argument_T.h"
#include "tao/Var_Array_Argument_T.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 5 || TAO_MICRO_VERSION != 14
#error This file should be regenerated with TAO_IDL
#endif

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_module\module_ch.cpp:35

namespace msg
{

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_array\array_ch.cpp:52

  typedef ::CORBA::Octet ImgData[40000];
  typedef ::CORBA::Octet ImgData_slice;
  struct ImgData_tag {};
  

  typedef
    TAO_FixedArray_Var_T<
        ImgData,
        ImgData_slice,
        ImgData_tag
      >
    ImgData_var;

  typedef
    ImgData
    ImgData_out;

  typedef
    TAO_Array_Forany_T<
        ImgData,
        ImgData_slice,
        ImgData_tag
      >
    ImgData_forany;

  extern  ImgData_slice *
  ImgData_alloc (void);

  extern  void
  ImgData_free (
      ImgData_slice *_tao_slice);
  
  extern  ImgData_slice *
  ImgData_dup (
      const ImgData_slice *_tao_slice);
  
  extern  void
  ImgData_copy (
      ImgData_slice *_tao_to,
      const ImgData_slice *_tao_from);

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_type.cpp:258

  struct Message;

  typedef
    ::TAO_Var_Var_T<
        Message
      >
    Message_var;

  typedef
    ::TAO_Out_T<
        Message
      >
    Message_out;

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure\structure_ch.cpp:48

  struct  Message
  {

    // TAO_IDL - Generated from
    // c:\ace_wrappers\tao\tao_idl\be\be_type.cpp:304

    
    typedef Message_var _var_type;
    typedef Message_out _out_type;
    
    ::TAO::String_Manager subject;
    ::CORBA::Long subject_id;
    ::CORBA::Long time_num;
    ::CORBA::Long pre_time;
    ::TAO::String_Manager text;
    ::CORBA::Long count;
    msg::ImgData img;
  };

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_module\module_ch.cpp:64

} // module msg

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:66

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  template<>
  class Arg_Traits< ::msg::ImgData_tag>
    : public
        Fixed_Array_Arg_Traits_T<
            ::msg::ImgData_var,
            ::msg::ImgData_forany,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_arg_traits.cpp:945

  template<>
  class Arg_Traits< ::msg::Message>
    : public
        Var_Size_Arg_Traits_T<
            ::msg::Message,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_traits.cpp:60

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{
  template<>
  struct  Array_Traits<
      msg::ImgData_forany
    >
  {
    static void free (
        msg::ImgData_slice * _tao_slice);
    static msg::ImgData_slice * dup (
        const msg::ImgData_slice * _tao_slice);
    static void copy (
        msg::ImgData_slice * _tao_to,
        const msg::ImgData_slice * _tao_from);
    static msg::ImgData_slice * alloc (void);
    static void zero (
        msg::ImgData_slice * _tao_slice);
  };
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_array\cdr_op_ch.cpp:99


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const msg::ImgData_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, msg::ImgData_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure\cdr_op_ch.cpp:43


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const msg::Message &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, msg::Message &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_codegen.cpp:1686
#if defined (__ACE_INLINE__)
#include "msgC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

