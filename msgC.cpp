// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.5.14
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       https://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     https://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_codegen.cpp:366


#include "msgC.h"
#include "tao/CDR.h"

#if !defined (__ACE_INLINE__)
#include "msgC.inl"
#endif /* !defined INLINE */

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_array\array_cs.cpp:94

msg::ImgData_slice *
msg::ImgData_dup (const msg::ImgData_slice *_tao_src_array)
{
  msg::ImgData_slice *_tao_dup_array =
    msg::ImgData_alloc ();
  
  if (!_tao_dup_array)
    {
      return static_cast <msg::ImgData_slice *> (0);
    }
  
  msg::ImgData_copy (_tao_dup_array, _tao_src_array);
  return _tao_dup_array;
}

msg::ImgData_slice *
msg::ImgData_alloc (void)
{
  msg::ImgData_slice *retval = 0;
  ACE_NEW_RETURN (retval, ::CORBA::Octet[40000], 0);
  return retval;
}

void
msg::ImgData_free (
    msg::ImgData_slice *_tao_slice)
{
  delete [] _tao_slice;
}

void
msg::ImgData_copy (
    msg::ImgData_slice * _tao_to,
    const msg::ImgData_slice *_tao_from)
{
  // Copy each individual element.
  for ( ::CORBA::ULong i0 = 0; i0 < 40000; ++i0)
    {
      _tao_to[i0] = _tao_from[i0];
    }
}

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_array\cdr_op_cs.cpp:163


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const msg::ImgData_forany &_tao_array)
{
  return
    strm.write_octet_array (
        reinterpret_cast <const ACE_CDR::Octet *> (_tao_array.in ()),
        40000);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    msg::ImgData_forany &_tao_array)
{
  return
    strm.read_octet_array (
        reinterpret_cast <ACE_CDR::Octet *> (_tao_array.out ()),
        40000);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure\cdr_op_cs.cpp:49

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const msg::Message &_tao_aggregate)
{
  msg::ImgData_forany _tao_aggregate_img
    (const_cast<msg::ImgData_slice*> (
      _tao_aggregate.img));
  return
    (strm << _tao_aggregate.subject.in ()) &&
    (strm << _tao_aggregate.subject_id) &&
    (strm << _tao_aggregate.time_num) &&
    (strm << _tao_aggregate.pre_time) &&
    (strm << _tao_aggregate.text.in ()) &&
    (strm << _tao_aggregate.count) &&
    (strm << _tao_aggregate_img);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    msg::Message &_tao_aggregate)
{
  msg::ImgData_forany _tao_aggregate_img
    (const_cast<msg::ImgData_slice*> (
      _tao_aggregate.img));
  return
    (strm >> _tao_aggregate.subject.out ()) &&
    (strm >> _tao_aggregate.subject_id) &&
    (strm >> _tao_aggregate.time_num) &&
    (strm >> _tao_aggregate.pre_time) &&
    (strm >> _tao_aggregate.text.out ()) &&
    (strm >> _tao_aggregate.count) &&
    (strm >> _tao_aggregate_img);
}

TAO_END_VERSIONED_NAMESPACE_DECL



